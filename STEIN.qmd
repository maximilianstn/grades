---
title: "Stein"
author: "Maximilian Stein"
date: "`r Sys.Date()`"
format:
  html: default
  pdf:
    documentclass: article
    keep-tex: true
execute:
  echo: true
  warning: false
  message: false
---

# 1. Introduction 

This document contains solutions for the exam, making use of the `dplyr`, `tidyr` and `stringr` libraries.

```{r setup, include=FALSE}
library(dplyr)
library(tidyr)
library(stringr)
library(here)
library(ggplot2)
```

## Question 1

Load the data.

```{r}
grades_data <- read.csv(here("grades.csv"))
```

# 2. Simple Analysis 

## Question 2

Give the number of grades in the data set directly in the text of your quarto file, in a sentence of the form “The data set contains xxx grades.” where xxx is replaced by the number of grades. This must be computed from the data set.

```{r}
cat("The data set contains", nrow(grades_data), "grades.")
```

## Question 3 

Use distinct() compute the number of students on the data set and report the value directly in the text as in the previous question.

```{r}
num_students <- grades_data %>%
  distinct(id) %>%
  nrow()

cat("There are", num_students, "students in the data set.")
```

## Question 4

Create a students data frame that contains one row per student and two variables, id and group that gives the assignment of each student to their group. Make sure that each student appears on only once in the data frame. Include a short extract of the data frame in the quarto rendering.

```{r}
# 'students' data frame with one row per student
students <- grades_data %>%
  distinct(id, group)

# short extract of the 'students' data frame
students %>%
  slice_head(n = 5) %>%
  knitr::kable()
```

## Question 5 

Use a graphical representation to display the number of students per group.

```{r}
students %>%
  count(group) %>%
  ggplot(aes(x = group, y = n, fill = group)) +
  geom_col(fill = "darkblue") +
  labs(title = "Number of Students per Group", x = "Group", y = "Number of Students") +
  theme_minimal()
```

## Question 6 

Compute the average of all the grades in Hunting and Gathering Skills in each group and display graphically this average as a function of the group. It is recommend to use geom_col() for this task.

```{r}
avg_grades <- grades_data %>%
  filter(course == "Hunting and Gathering Skills") %>%
  group_by(group) %>%
  summarise(avg_grade = mean(grade, na.rm = TRUE))

# Plotting of average grades
ggplot(avg_grades, aes(x = group, y = avg_grade, fill = group)) +
  geom_col(fill = "darkblue") +
  labs(title = "Average Grades in Hunting and Gathering Skills by Group",
       x = "Group",
       y = "Average Grade") +
  theme_minimal() 
```

## Question 7 

Compare graphically the distribution of the grades of the 3 modules.

### First Visualisation Option - Boxplot Distribution
```{r}
ggplot(grades_data, aes(x = factor(module), y = grade)) +
  geom_boxplot(fill = "lightblue") +
  labs(
    title = "Distribution of Grades by Module",
    x = "Module",
    y = "Grade"
  ) +
  theme_minimal()
```

### Second Visualisation Option - Density Distribution
```{r}
ggplot(grades_data, aes(x = grade, fill = factor(module))) +
  geom_density(alpha = 0.5) +
  labs(
    title = "Density Distribution of Grades by Module",
    x = "Grade",
    y = "Density",
    fill = "Module"
  ) +
  theme_minimal()
```
# 3. Attendance Analysis

## Question 8

Compute the number of grades per student and include in your quarto rendering an extract of the resulting data frame. Make sure to keep in the data frame the id of the students but also their group. Include in the text a markdown table with the minimum, maximum, average and median number of grades per student.

```{r}
grades_per_student <- grades_data %>%
  group_by(id, group) %>%
  summarise(num_grades = n(), .groups = 'drop')

# Extract of the resulting data frame
grades_per_student %>%
  slice_head(n = 5) %>%
  knitr::kable()

# Summary statistics
grades_summary <- grades_per_student %>%
  summarise(
    Minimum = min(num_grades),
    Maximum = max(num_grades),
    Average = mean(num_grades),
    Median = median(num_grades)
  )

# Mrkdown Table
grades_summary %>%
  knitr::kable()
```

## Question 9 

Create a data frame that gives for each student their id, their group and the number of grades they obtained in Martial Arts and Self-Defense and include in the quarto rendering a small extract of the result.

```{r}
martial_arts_grades <- grades_data %>%
  filter(course == "Martial Arts and Self-Defense") %>%
  group_by(id, group) %>%
  summarise(num_grades = n(), .groups = 'drop', course)

martial_arts_grades %>%
  slice_head(n = 5) %>%
  knitr::kable()
```

